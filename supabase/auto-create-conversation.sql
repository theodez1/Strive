-- ============================================
-- Trigger: Cr√©er automatiquement une conversation lors de la cr√©ation d'un √©v√©nement
-- ============================================
-- Ce trigger s'assure que chaque √©v√©nement a une conversation associ√©e
-- ============================================

-- Cr√©er la fonction qui cr√©e une conversation avec message syst√®me
CREATE OR REPLACE FUNCTION create_conversation_for_event()
RETURNS TRIGGER AS $$
DECLARE
  new_conversation_id uuid;
  system_user_id uuid;
BEGIN
  -- Cr√©er une conversation pour le nouvel √©v√©nement
  INSERT INTO conversations (event_id)
  VALUES (NEW.id)
  ON CONFLICT (event_id) DO NOTHING
  RETURNING id INTO new_conversation_id;
  
  -- Si la conversation vient d'√™tre cr√©√©e, ajouter un message syst√®me
  IF new_conversation_id IS NOT NULL THEN
    -- Utiliser l'ID de l'organisateur comme exp√©diteur du message syst√®me
    system_user_id := NEW.organizer_id;
    
    -- Cr√©er le message syst√®me de bienvenue
    INSERT INTO messages (conversation_id, sender_id, content, type, read)
    VALUES (
      new_conversation_id,
      system_user_id,
      'Conversation cr√©√©e pour l''√©v√©nement "' || NEW.name || '".',
      'system',
      true
    );
  END IF;
  
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Supprimer le trigger s'il existe d√©j√†
DROP TRIGGER IF EXISTS auto_create_conversation_on_event ON events;

-- Cr√©er le trigger qui se d√©clenche apr√®s la cr√©ation d'un √©v√©nement
CREATE TRIGGER auto_create_conversation_on_event
  AFTER INSERT ON events
  FOR EACH ROW
  EXECUTE FUNCTION create_conversation_for_event();

-- ============================================
-- V√©rification
-- ============================================

-- V√©rifier que le trigger est cr√©√©
SELECT 
  trigger_name,
  event_manipulation,
  action_statement
FROM information_schema.triggers
WHERE trigger_name = 'auto_create_conversation_on_event';

-- ============================================
-- üéâ Configuration termin√©e !
-- ============================================
--
-- Maintenant, chaque fois qu'un √©v√©nement est cr√©√©:
-- 1. Un trigger se d√©clenche automatiquement
-- 2. Une conversation est cr√©√©e et li√©e √† l'√©v√©nement
-- 3. Les participants peuvent commencer √† chatter
--
-- Pour tester:
-- 1. Cr√©ez un √©v√©nement via l'app
-- 2. V√©rifiez dans Supabase:
--    SELECT e.name, c.id as conversation_id 
--    FROM events e 
--    LEFT JOIN conversations c ON c.event_id = e.id 
--    ORDER BY e.created_at DESC LIMIT 5;
-- ============================================

